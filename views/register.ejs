<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>สมัครสมาชิก</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      min-height: 100vh;
      margin: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      background: url('https://cdn.outsideonline.com/wp-content/uploads/2020/11/19/cyclist-lens-flare_h.jpg') no-repeat center center fixed;
      background-size: cover;
      font-family: "Segoe UI", sans-serif;
    }

    .glass-card {
      background: rgba(255, 255, 255, 0.15);
      border-radius: 20px;
      padding: 2rem;
      width: 100%;
      max-width: 450px;
      backdrop-filter: blur(5px) saturate(180%);
      -webkit-backdrop-filter: blur(5px) saturate(180%);
      border: 1px solid rgba(255, 255, 255, 0);
      box-shadow: 0 8px 32px rgba(31, 38, 135, 0.2);
      animation: float 6s ease-in-out infinite;
    }


    h2 {
      color: #ffffff;
      font-weight: bold;
      text-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    }


    input.form-control {
      background: rgba(255, 255, 255, 0.3);
      border: none;
      border-radius: 12px;
      color: #fff;
      padding: 0.8rem;
    }

    input.form-control::placeholder {
      color: rgba(0, 0, 0, 0.8);
    }

    .btn-success {
      border-radius: 12px;
      padding: 0.8rem;
      background: linear-gradient(135deg, #8d8d8d, #ffffff);
      border: none;
      font-weight: bold;
      transition: 0.3s;
    }

    .btn-success:hover {
      transform: scale(1.05);
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.5);
    }

    p, a {
      color: #ffffff !important;
      text-shadow: 0 1px 5px rgba(0,0,0,0.2);
    }

    #errorMsg {
      border-radius: 12px;
      backdrop-filter: blur(15px);
      background: rgba(255, 0, 0, 0.3);
      color: #fff;
      border: none;
      padding: 8px;
      margin-top: 10px;
    }

    .hidden { display: none; }
  </style>
</head>
<body>

  <div class="glass-card text-center">
    <h2 class="mb-4">สมัครสมาชิก</h2>

    <div id="errorMsg" class="hidden"></div>

    <form id="registerForm" action="/register" method="POST">
      <div class="mb-3">
        <input type="email" name="email" class="form-control" placeholder="อีเมล" required>
      </div>
      <div class="mb-3">
        <input type="text" name="username" class="form-control" placeholder="ชื่อผู้ใช้" required>
      </div>
      <div class="mb-3">
        <input type="password" name="password" id="password" class="form-control" placeholder="รหัสผ่าน" required>
      </div>
      <div class="mb-3">
        <input type="password" name="confirmPassword" id="confirmPassword" class="form-control" placeholder="ยืนยันรหัสผ่าน" required>
      </div>

      <input type="hidden" name="role" value="user">

      <div class="d-grid">
        <button type="submit" class="btn btn-success">สมัครสมาชิก</button>
      </div>
    </form>

    <p class="mt-3">มีบัญชีอยู่แล้ว? <a href="/login">เข้าสู่ระบบ</a></p>
  </div>

  <script>
    const form = document.getElementById('registerForm');
    const password = document.getElementById('password');
    const confirmPassword = document.getElementById('confirmPassword');
    const errorMsg = document.getElementById('errorMsg');

    form.addEventListener('submit', async function (e) {
      e.preventDefault();

      const pass = password.value;
      const confirmPass = confirmPassword.value;

      if (!validatePassword(pass)) {
        errorMsg.textContent = "รหัสผ่านต้องมีอย่างน้อย 8 ตัว มีตัวพิมพ์ใหญ่ พิมพ์เล็ก ตัวเลข และอักขระพิเศษ";
        errorMsg.classList.remove('hidden');
        return;
      }
      if (pass !== confirmPass) {
        errorMsg.textContent = "รหัสผ่านและยืนยันรหัสผ่านไม่ตรงกัน";
        errorMsg.classList.remove('hidden');
        return;
      }

      errorMsg.classList.add('hidden');

      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());

      try {
        const response = await fetch('/register', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data)
        });

        const result = await response.json();

        if (result.success) {
          localStorage.setItem('authToken', result.token);
          localStorage.setItem('userId', result.userId);
          localStorage.setItem('userRole', result.role);
          window.location.href = '/info';
        } else {
          errorMsg.textContent = result.error || 'เกิดข้อผิดพลาด';
          errorMsg.classList.remove('hidden');
        }
      } catch (err) {
        errorMsg.textContent = 'เกิดข้อผิดพลาดจากระบบ';
        errorMsg.classList.remove('hidden');
      }
    });

    function validatePassword(password) {
      const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).{8,}$/;
      return regex.test(password);
    }
  </script>

</body>
</html>
