const express = require('express');
const router = express.Router();
const db = require('../db');
const bcrypt = require('bcrypt');

// GET р╣Бр╕кр╕Фр╕Зр╕Яр╕нр╕гр╣Мр╕бр╕Хр╕▒р╣Йр╕Зр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Гр╕лр╕бр╣И
router.get('/reset-password', (req, res) => {
  const { token } = req.query;

  const sql = 'SELECT * FROM password_resets WHERE token = ? AND expires_at > NOW()';
  db.query(sql, [token], (err, results) => {
    if (err || results.length === 0) {
      return res.send('р╕ер╕┤р╕Зр╕Бр╣Мр╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕р╕лр╕гр╕╖р╕нр╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З');
    }

    res.render('reset-password', { token });
  });
});

// POST р╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Гр╕лр╕бр╣И
router.post('/reset-password', async (req, res) => {
  const { token, newPassword, confirmPassword } = req.body;

  // тЬЕ р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╕Хр╕гр╕Зр╕Бр╕▒р╕Щ
  if (newPassword !== confirmPassword) {
    return res.send('р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Др╕бр╣Ир╕Хр╕гр╕Зр╕Бр╕▒р╕Щ');
  }

  // тЬЕ р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Др╕зр╕▓р╕бр╕Лр╕▒р╕Ър╕Лр╣Йр╕нр╕Щр╕Вр╕нр╕Зр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ
  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*()_\-+=\[\]{};':"\\|,.<>/?]).{8,}$/;
  if (!passwordRegex.test(newPassword)) {
    return res.send('р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╕Хр╣Йр╕нр╕Зр╕бр╕╡р╕нр╕вр╣Ир╕▓р╕Зр╕Щр╣Йр╕нр╕в 8 р╕Хр╕▒р╕з р╣Бр╕ер╕░р╕Ыр╕гр╕░р╕Бр╕нр╕Ър╕Фр╣Йр╕зр╕в р╕Хр╕▒р╕зр╕Юр╕┤р╕бр╕Юр╣Мр╣Гр╕лр╕Нр╣И р╕Юр╕┤р╕бр╕Юр╣Мр╣Ар╕ер╣Зр╕Б р╕Хр╕▒р╕зр╣Ар╕ер╕В р╣Бр╕ер╕░р╕нр╕▒р╕Бр╕Вр╕гр╕░р╕Юр╕┤р╣Ар╕ир╕й');
  }

  // тЬЕ р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ token р╕зр╣Ир╕▓р╕вр╕▒р╕Зр╣Гр╕Кр╣Йр╣Др╕Фр╣Й
  const sql = 'SELECT * FROM password_resets WHERE token = ? AND expires_at > NOW()';
  db.query(sql, [token], async (err, results) => {
    if (err || results.length === 0) {
      return res.send('р╕ер╕┤р╕Зр╕Бр╣Мр╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕р╕лр╕гр╕╖р╕нр╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З');
    }

    const userId = results[0].user_id;

    try {


      // тЬЕ р╕нр╕▒р╕Ыр╣Ар╕Фр╕Хр╣Гр╕Щр╕Хр╕▓р╕гр╕▓р╕З user
      const updateSql = 'UPDATE user SET password = ? WHERE id = ?';
      db.query(updateSql, [newPassword, userId], (updateErr) => {
        if (updateErr) {
          return res.send('р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╕нр╕▒р╕Ыр╣Ар╕Фр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ');
        }

        // тЬЕ р╕ер╕Ъ token р╕Чр╕╡р╣Ир╣Гр╕Кр╣Йр╣Др╕Ыр╣Бр╕ер╣Йр╕з
        db.query('DELETE FROM password_resets WHERE token = ?', [token]);

        // тЬЕ р╣Бр╕кр╕Фр╕Зр╕лр╕Щр╣Йр╕▓р╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щ
        res.render('reseted-pass'); // р╕Лр╕╣р╕Бр╣Йр╕▓р╕Чр╕│р╕лр╕Щр╣Йр╕▓р╕Щр╕╡р╣Йр╣Др╕зр╣Йр╣Бр╕ер╣Йр╕зр╣Гр╕Кр╣Ир╕бр╕▒р╣Йр╕в ЁЯШД
      });
    } catch (hashError) {
      return res.send('р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╣Ар╕Вр╣Йр╕▓р╕гр╕лр╕▒р╕кр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ');
    }
  });
});

module.exports = router;
